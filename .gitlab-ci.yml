variables:
  NODE_IMAGE: ${CI_REGISTRY_IMAGE}/node-20:latest

stages:
  - install
  - build
  - check
  - release
  - deploy

workflow:
  rules:
    - if: $CI_COMMIT_TITLE =~ /\[skip ci\]$/
      when: never
    - if: $CI_PIPELINE_SOURCE == 'merge_request_event'
    - if: $CI_PIPELINE_SOURCE == 'web'
    - if: $CI_COMMIT_TAG
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH

default:
  image: ${NODE_IMAGE}

.node-modules-cache:
  cache:
    key:
      files:
        - pnpm-lock.yaml
    paths:
      - .pnpm-store
    policy: pull
  before_script:
    - echo -e "\e[0Ksection_start:`date +%s`:npm_install[collapsed=true]\r\e[0KInstalling dependencies"
    - pnpm config set store-dir .pnpm-store
    - pnpm install --prefer-offline
    - echo -e "\e[0Ksection_end:`date +%s`:npm_install\r\e[0K"

secure-files:
  stage: install
  variables:
    SECURE_FILES_DOWNLOAD_PATH: './'
  script:
    - curl --silent "https://gitlab.com/gitlab-org/incubation-engineering/mobile-devops/download-secure-files/-/raw/main/installer" | sh
  artifacts:
    paths:
      - config.json

install:
  stage: install
  extends:
    - .node-modules-cache
  needs:
    - secure-files
  cache:
    policy: pull-push
  script:
    - pnpm build:api
  artifacts:
    paths:
      - src/shared/api/openapi

build:
  stage: build
  extends:
    - .node-modules-cache
  needs:
    - secure-files
  script:
    - pnpm build
  artifacts:
    paths:
      - build

lint:js:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  extends:
    - .node-modules-cache
  needs:
    - install
  script:
    - pnpm lint:js

lint:css:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  extends:
    - .node-modules-cache
  needs:
    - install
  script:
    - pnpm lint:css

lint:types:
  stage: check
  rules:
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
  extends:
    - .node-modules-cache
  needs:
    - install
  script:
    - pnpm lint:types

release:
  stage: release
  rules:
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
  when: manual
  extends:
    - .node-modules-cache
  needs:
    - build
  variables:
    GIT_AUTHOR_NAME: $GITLAB_USER_NAME
    GIT_AUTHOR_EMAIL: $GITLAB_USER_EMAIL
    GIT_COMMITTER_NAME: $GITLAB_USER_NAME
    GIT_COMMITTER_EMAIL: $GITLAB_USER_EMAIL
  script:
    - pnpm semantic-release

deploy:
  stage: deploy
  rules:
    - if: $CI_COMMIT_TAG
  environment: production
  script:
    - curl $DEPLOY_HOOK
